<<<<<<< HEAD
# Generated by Django 5.0.14 on 2025-08-09 23:44
=======
# Generated by Django 5.0.14 on 2025-08-09 22:59
>>>>>>> e1d8e026536fb41fa5a49ad98f6a6ae4cf02aca3

import api.models
import django.core.validators
import django.db.models.deletion
<<<<<<< HEAD
from decimal import Decimal
=======
>>>>>>> e1d8e026536fb41fa5a49ad98f6a6ae4cf02aca3
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CarouselImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('image', models.ImageField(upload_to='carousel/')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, editable=False)),
            ],
            options={
                'verbose_name': 'Carousel Image',
                'verbose_name_plural': 'Carousel Images',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('slug', models.SlugField(editable=False, max_length=21, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Contact name or title', max_length=100)),
                ('value', models.CharField(help_text='Contact information (phone, email, address, etc.)', max_length=200)),
                ('contact_type', models.CharField(choices=[('phone', 'Phone'), ('email', 'Email'), ('address', 'Address'), ('social', 'Social Media'), ('other', 'Other')], default='other', help_text='Type of contact information', max_length=20)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order in which contacts should be displayed')),
                ('is_active', models.BooleanField(default=True, help_text='Is this contact information currently active?')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='usd', max_length=10)),
                ('stripe_payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Upload service image (width must be equal to or greater than height)', upload_to='services/')),
                ('name', models.CharField(help_text='Service name (must be unique)', max_length=50, unique=True)),
<<<<<<< HEAD
                ('price', models.DecimalField(decimal_places=2, help_text='Service price in USD (min $0.01)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
=======
                ('price', models.DecimalField(decimal_places=2, help_text='Service price in USD (min $0.01)', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
>>>>>>> e1d8e026536fb41fa5a49ad98f6a6ae4cf02aca3
                ('is_active', models.BooleanField(default=True, help_text='Is this service currently offered?', verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('description', models.TextField(help_text='Detailed service description (max 500 chars)', max_length=500)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Upload product image (width must be equal to or greater than height)', upload_to='products/')),
                ('name', models.CharField(help_text='Product name (must be unique)', max_length=70, unique=True)),
                ('slug', models.SlugField(editable=False, help_text='URL-friendly version of the name (auto-generated)', max_length=70, unique=True)),
                ('description', models.TextField(help_text='Detailed product description (max 500 chars)', max_length=500)),
<<<<<<< HEAD
                ('price', models.DecimalField(decimal_places=2, help_text='Price in USD (min $0.01)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
=======
                ('price', models.DecimalField(decimal_places=2, help_text='Price in USD (min $0.01)', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
>>>>>>> e1d8e026536fb41fa5a49ad98f6a6ae4cf02aca3
                ('is_active', models.BooleanField(default=True, help_text='Is this product available for sale?', verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('category', models.ForeignKey(blank=True, help_text='Select product category', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='api.category', verbose_name='Product Category')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
            bases=(models.Model, api.models.ImageHandlingMixin),
        ),
    ]
